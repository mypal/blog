<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mypal</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://mypal.wang/blog/"/>
  <updated>2017-06-19T08:56:02.000Z</updated>
  <id>http://mypal.wang/blog/</id>
  
  <author>
    <name>景落</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>h2o安装与配置</title>
    <link href="http://mypal.wang/blog/2017/06/19/build-server/"/>
    <id>http://mypal.wang/blog/2017/06/19/build-server/</id>
    <published>2017-06-19T07:37:10.000Z</published>
    <updated>2017-06-19T08:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用了<a href="https://h2o.examp1e.net/" target="_blank" rel="external">h2o</a>作为反代，主要是便于统一各应用提供的服务，并提供多级域名。之所以没有考虑老牌nginx，是因为h2o天生支持h2，并且实现了server push，而且配置简单，但基本能满足开博的需求。然而安装的时候开始走了不少弯路….官方安装文档对依赖的说明太少了。</p>
<p>https是在Let’s Encrypt申请的免费证书，有90天的免费期，90天后需要重新续签。</p>
<p>博客系统用了hexo+next，hexo的功能还是比较完善的，并且生成的是静态文件，对服务器资源要求低，配合next，还是比较美观实用的。</p>
<h1 id="h2o安装与配置"><a href="#h2o安装与配置" class="headerlink" title="h2o安装与配置"></a>h2o安装与配置</h1><p>h2o的官方<a href="https://h2o.examp1e.net/install.html" target="_blank" rel="external">安装文档</a>描述比较简单，但h2o依赖的模块比较多，需要安装好后再进行h2o编译安装。</p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># apt可直接安装的包</span></div><div class="line">apt-get install locate git cmake build-essential checkinstall autoconf pkg-config libtool python-sphinx libcunit1-dev nettle-dev libyaml-dev libuv-dev -y</div><div class="line"></div><div class="line"><span class="comment"># libuv安装</span></div><div class="line">curl -O http://dist.libuv.org/dist/v1.9.1/libuv-v1.9.1.tar.gz </div><div class="line">tar -zxf libuv-v1.9.1.tar.gz</div><div class="line"><span class="built_in">cd</span> libuv-v1.9.1/</div><div class="line">sh autogen.sh</div><div class="line">./configure</div><div class="line">make</div><div class="line">make check</div><div class="line">make install</div><div class="line"></div><div class="line"><span class="comment"># 安装wslay，提供WebSocket支持。如果不需要可忽略</span></div><div class="line">git <span class="built_in">clone</span> https://github.com/tatsuhiro-t/wslay</div><div class="line"><span class="built_in">cd</span> wslay</div><div class="line">autoreconf -i</div><div class="line">automake</div><div class="line">autoconf</div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<h2 id="h2o编译-amp-安装"><a href="#h2o编译-amp-安装" class="headerlink" title="h2o编译&amp;安装"></a>h2o编译&amp;安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 直接使用默认参数即可，如果有特殊需求可以根据文档设定参数</span></div><div class="line">cmake .</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<h2 id="h2o配置"><a href="#h2o配置" class="headerlink" title="h2o配置"></a>h2o配置</h2><p>官方配置说明还是挺详细的，可以直接先<a href="https://h2o.examp1e.net/configure/quick_start.html" target="_blank" rel="external">Quick Start</a>体验一把。</p>
<p>在http的80端口设置了301重定向到https，由于暂时只有blog一个应用，又将/ 302重定向到了/blog，在/blog下设置了静态服务。</p>
<p>具体配置文档如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">user: nobody</div><div class="line">hosts:</div><div class="line">  &quot;mypal.wang:80&quot;:</div><div class="line">    listen:</div><div class="line">      port: 80</div><div class="line">    paths:</div><div class="line">      &quot;/&quot;:</div><div class="line">        redirect:</div><div class="line">          status: 301</div><div class="line">          url: &quot;https://mypal.wang/&quot;</div><div class="line"></div><div class="line">  &quot;mypal.wang:443&quot;:</div><div class="line">    listen:</div><div class="line">      port: 443</div><div class="line">      ssl:</div><div class="line">        key-file: /path/to/privkey.pem</div><div class="line">        certificate-file: /path/to/cert.pem</div><div class="line">    paths:</div><div class="line">      &quot;/&quot;:</div><div class="line">        redirect:</div><div class="line">          status: 302</div><div class="line">          url: &quot;https://mypal.wang/blog&quot;</div><div class="line">      &quot;/blog&quot;:</div><div class="line">        file.dir: /var/www/blog</div><div class="line"></div><div class="line">access-log: /var/h2o/log/access.log</div><div class="line">error-log: /var/h2o/log/error.log</div><div class="line">pid-file: /var/run/h2o.pid</div></pre></td></tr></table></figure>
<h2 id="systemd脚本"><a href="#systemd脚本" class="headerlink" title="systemd脚本"></a>systemd脚本</h2><p>参考了GitHub上的一个<a href="https://gist.github.com/Angristan/214f0aa396c1a341963b937b92a38d0d" target="_blank" rel="external">脚本</a></p>
<p>将配置脚本保存在/etc/systemd/system/h2o.service<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=H2O - the optimized HTTP/1, HTTP/2 server</div><div class="line">After=network-online.target nss-lookup.target remote-fs.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=simple</div><div class="line">PIDFile=/var/run/h2o.pid</div><div class="line">ExecStart=/usr/local/bin/h2o --mode master --conf /etc/h2o/h2o.conf</div><div class="line">ExecReload=/bin/kill -HUP $MAINPID</div><div class="line">ExecStop=/bin/kill -TERM $MAINPID</div><div class="line">SyslogLevel=notice</div><div class="line">PrivateTmp=true</div><div class="line">LimitNOFILE=infinity</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure></p>
<p>执行以下两条命令，即可立即启动并在以后开机时自启动h2o</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start h2o.service</div><div class="line">sudo systemctl <span class="built_in">enable</span> h2o.service</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;使用了&lt;a href=&quot;https://h2o.examp1e.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;h
    
    </summary>
    
      <category term="server" scheme="http://mypal.wang/blog/categories/server/"/>
    
    
      <category term="开站" scheme="http://mypal.wang/blog/tags/%E5%BC%80%E7%AB%99/"/>
    
      <category term="服务器" scheme="http://mypal.wang/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>开站</title>
    <link href="http://mypal.wang/blog/2017/06/14/init/"/>
    <id>http://mypal.wang/blog/2017/06/14/init/</id>
    <published>2017-06-14T13:50:32.000Z</published>
    <updated>2017-06-14T14:16:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>时隔一年半，懒惰的我终于又来开站了。这次开站的契机主要是家里装修再搞智能家居方案，然而穿网并不是很方便，毕竟免费的ddns限制太多，不如干脆直接自己搞个server好了。<br>另外一个原因是mos有内部优惠，薅公司羊毛，哈哈哈~<br>这里先简单说一下使用的方案，后续有时间再补充详细的搭建步骤，以及智能家居的各种解决方案。</p>
<h1 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h1><ul>
<li>美团云1核/1G/25G HDD(赠送)/1Mbps 63 ￥631.264/年</li>
<li>万网申请的域名：mypal.wang ￥59/年</li>
</ul>
<h1 id="软环境"><a href="#软环境" class="headerlink" title="软环境"></a>软环境</h1><ul>
<li>server: H2O(天生支持h2，配置比nginx简单，功能略少)</li>
<li>https: let’s encrypt(免费)</li>
<li>blog: hexo</li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;时隔一年半，懒惰的我终于又来开站了。这次开站的契机主要是家里装修再搞智能家居方案，然而穿网并不是很方便，毕竟免费的ddns限制太多，不如干脆
    
    </summary>
    
      <category term="server" scheme="http://mypal.wang/blog/categories/server/"/>
    
    
      <category term="开站" scheme="http://mypal.wang/blog/tags/%E5%BC%80%E7%AB%99/"/>
    
      <category term="服务器" scheme="http://mypal.wang/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
</feed>
